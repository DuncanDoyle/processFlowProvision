<project name="pfp-openshift" >

    <target name="openshift.provision.pfp.core" description="" >
        <!-- pfp modules are needed to support subclassing of bpm integration layer to proxy to pfpCore -->
        <antcall target="openshift.deploy.jboss.modules" >
            <param name="app.location" value="${openshift.pfpCore.app.location}"/>
        </antcall>
        <antcall target="filter">
            <param name="source.dir" value="conf/openshift/pfpCore"/>
            <param name="dest.dir" value="${openshift.pfpCore.app.location}/.openshift"/>
        </antcall>
        <copy todir="${openshift.pfpCore.app.location}/deployments">
            <fileset dir="${temp.pfp.services.dir}" >
                <include name="*.jar" />
                <include name="*.war" />
            </fileset>
        </copy>
        <delete file="${openshift.pfpCore.app.location}/pom.xml" />
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="push"/>
           <arg value="-localAppLocation=${openshift.pfpCore.app.location}"/>
           <arg value="-domainName=${openshift.domain.name}"/>
        </exec> 
    </target>

    <target name="openshift.provision.brms.webs" description="" >
        <antcall target="openshift.deploy.jboss.modules" >
            <param name="app.location" value="${openshift.brmsWebs.app.location}"/>
        </antcall>
        <property name="pfp.core.remoting.port" value="${base.remoting.port}" />
        <antcall target="filter">
            <param name="source.dir" value="conf/openshift/brmsWebs"/>
            <param name="dest.dir" value="${openshift.brmsWebs.app.location}/.openshift"/>
        </antcall>
        <delete file="${openshift.brmsWebs.app.location}/pom.xml" />
        <antcall target="explode.guvnor.and.designer" />
        <antcall target="explode.jbpm.gwt.console" />
        <!-- rsync to exploded web archives to :  ${openshift.jboss.cartridge.type}/tmp/deployments
            this directory will not get blown away when executing 'git push' on openshift app
        -->
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="openshiftRsync"/>
           <arg value="-localDir=${temp.brmsWebs.dir}/*"/>
           <arg value="-sshUrl=${openshift.brmsWebs.ssh.url}"/>
           <arg value="-remoteDir=${openshift.jboss.cartridge.type}/tmp/deployments"/>
        </exec> 
        <!-- NOTE:  git push on openshift app will blow away exploded archives in app-root/repo/deployments -->
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="push"/>
           <arg value="-localAppLocation=${openshift.brmsWebs.app.location}"/>
           <arg value="-domainName=${openshift.domain.name}"/>
        </exec> 
    </target>

    <target name="openshift.refresh.jboss" >
        <fail unless="server.ip.address" message="refresh.jboss:  need to pass 'server.ip.address' property" />
        <fail unless="management.port" message="refresh.jboss:  need to pass 'management.port' property" />
        <fail unless="ssh.url" message="refresh.jboss:  need to pass 'ssh.url' property" />
        <echo message="***** refresh.jboss :  will now call the following target :  stop.jboss, start.jboss" />
        <antcall target="openshift.stop.jboss" >
            <param name="server.ip.address" value="${server.ip.address}"/>
            <param name="management.port" value="${management.port}"/>
            <param name="ssh.url" value="${ssh.url}"/>
        </antcall>
        <antcall target="openshift.start.jboss" >
            <param name="ssh.url" value="${ssh.url}"/>
        </antcall>
    </target>

    <target name="openshift.stop.jboss" >
        <fail unless="management.port" message="stop.jboss:  need to pass 'management.port' property" />
        <fail unless="ssh.url" message="stop.jboss:  need to pass 'ssh.url' property" />
        <if>    
            <not><isset property="server.ip.address"/></not>
            <then><property name="server.ip.address" value="${ENV.HOSTNAME}" /></then>
        </if>   
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="stopJboss"/>
           <arg value="-localJbossHome=${jboss.home}"/>
           <arg value="-serverIpAddr=${server.ip.address}"/>
           <arg value="-port=${management.port}"/>
           <arg value="-sshUrl=${ssh.url}"/>
        </exec> 
    </target>


    <target name="openshift.start.jboss" >
        <fail unless="ssh.url" message="start.jboss:  need to pass 'ssh.url' property" />
        <exec executable="bin/openshift.sh" failonerror="true" >
            <arg value="startJboss"/>
            <arg value="-remoteJbossHome=${openshift.remote.jboss.home}"/>
            <arg value="-sshUrl=${ssh.url}"/>
        </exec> 
    </target>

    <target name="openshift.deploy.brms.webs" >
        <fail unless="ssh.url" message="os.deploy.brms.webs:  need to pass 'ssh.url' property" />
        <fail unless="remote.deployments.dir" message="os.deploy.brms.webs:  need to pass 'remote.deployments.dir' property" />
        <antcall target="create.brms.webs" />
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="copyFileToRemote"/>
           <arg value="-sshUrl=${ssh.url}"/>
           <arg value="-localDir=${temp.deployments.dir}"/>
           <arg value="-file=${designer.name}"/>
           <arg value="-remoteDir=${remote.deployments.dir}"/>
        </exec> 
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="copyFileToRemote"/>
           <arg value="-sshUrl=${ssh.url}"/>
           <arg value="-localDir=${temp.deployments.dir}"/>
           <arg value="-file=${guvnor.name}"/>
           <arg value="-remoteDir=${remote.deployments.dir}"/>
        </exec> 
    </target>
    <target name="openshift.refreshGuvnor" >
        <fail unless="ssh.url" message="os.refreshGuvnor:  need to pass 'ssh.url' property" />
        <fail unless="os.data.dir" message="os.refreshGuvnor:  need to pass 'os.data.dir' property" />
        <antcall target="filter">
            <param name="source.dir" value="conf/brmsWebs/drools-guvnor"/>
            <param name="file.name" value="repository.xml"/>
            <param name="dest.dir" value="target/tmp"/>
        </antcall>
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="refreshGuvnor"/>
           <arg value="-sshUrl=${ssh.url}"/>
           <arg value="-remoteDir=${os.data.dir}/guvnor"/>
        </exec> 

    </target>

    <target name="openshift.deploy.jboss.modules" >
        <fail unless="app.location" message="openshift.deploy.jboss.modules:  need to pass 'app.location' property" />
        <delete dir="${openshift.pfpCore.app.location}/.openshift/config/modules" />
        <antcall target="configure.jboss.modules" />
        <copy overwrite="true" todir="${app.location}/.openshift/config/modules">
            <fileset dir="${temp.jboss.dir}/modules" />
        </copy>
    </target>

    <target name="openshift.provision.db" >
        <if>    
            <equals arg1="${jdbc.module.name}" arg2="postgresql" />
            <then><property name="command" value="executePostgresqlScript" /></then>
            <else><property name="command" value="executeMysqlScript" /></else>
        </if>   
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/openshift.sh"/>
           <arg value="${command}"/>
           <arg value="-serverIpAddr=${brmsWebs.db.ip.addr}"/>
           <arg value="-managementPort=3306"/>
           <arg value="-sshUrl=${brmsWebs.db.ssh.url}"/>
           <arg value="-user=${brmsWebs.db.root.user}"/>
           <arg value="-password=${brmsWebs.db.root.password}"/>
           <arg value="-localDir=conf/postgresql" />
           <arg value="-file=processFlowProvision.sql" />
           <arg value="-remoteDir=/tmp" />
        </exec> 
    </target>

</project>

<project name="processFlowProvision-distro" xmlns:artifact="antlib:org.apache.maven.artifact.ant" default="provision.pfp.core" >

    <property environment="ENV"/>
    <property file="build.properties" />

    <!--- NOTE:  found in ant-contrib project
        - now using for the use of 'var' tasks in subprojects where MUTABLE properties would be nice
    -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="lib/ant/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <math result="pfp.core.remoting.port" operand1="${base.remoting.port}" operation="+" operand2="${pfp.core.port.offset}" datatype="int" />


    <!-- even though this is in build.xml ... need it here as well for distro -->
    <import file="privateServiceTaskRepo/build.xml"/>

    <target name="stop.master" description="default behavior is to shutdown all jboss servers via management port of 9999" >
        <if>
            <not><isset property="management.port"/></not>
            <then><property name="management.port" value="9999" /></then>
        </if>
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/jboss_eap.sh"/>
           <arg value="stop"/>
           <arg value="${management.port}"/>
           <arg value="master"/>
        </exec>
    </target>
    <target name="start.master" description="">
        <exec executable="bash" failonerror="true" dir="." >
           <arg value="bin/jboss_eap.sh"/>
           <arg value="start"/>
           <arg value="${jboss.domain.base.dir}"/>
           <arg value="${domain.config.file}"/>
        </exec>
    </target>
    <target name="refresh.master" >
        <echo message="***** refresh.master :  will now call the following target :  stop.master, clone.jboss, and start.master" />
        <antcall target="distro.clean" />
        <antcall target="stop.master"  />
        <antcall target="clone.jboss" />
        <antcall target="configure.jboss.modules" />
        <antcall target="start.master"  />
        <antcall target="execute.cli">
                <param name="cli.source.dir" value="conf/jboss/"/>
                <param name="cli.to.filter.and.execute" value="jboss-config.cli"/>
        </antcall>
    </target>
    <target name="bounce.all.servers" description="">
        <if>
            <not><isset property="management.port"/></not>
            <then><property name="management.port" value="9999" /></then>
        </if>
        <antcall target="stop.master"  />
        <antcall target="start.master" />
        <exec executable="${jboss.home}/bin/jboss-cli.sh" failonerror="${cli.fail.on.error}">
            <arg value="--connect"/>
            <arg value="--controller=${ENV.HOSTNAME}:${management.port}"/>
           <arg value="/host=master/server-config=${pfp.core.server}/:start(server=${pfp.core.server},blocking=true)"/>
        </exec>
        <exec executable="${jboss.home}/bin/jboss-cli.sh" failonerror="${cli.fail.on.error}">
            <arg value="--connect"/>
            <arg value="--controller=${ENV.HOSTNAME}:${management.port}"/>
           <arg value="/host=master/server-config=brms-webs/:start(server=brms-webs,blocking=true)"/>
        </exec>
    </target>
    <target name="checkServersAndProjectLib">
        <available file="${JBOSS_HOME}/jboss-modules.jar" property="defaultServerExists" />
        <fail unless="defaultServerExists" message="${JBOSS_HOME}/jboss-modules.jar doesn't exist! .... please fix your $JBOSS_HOME environment variable!!" />
        <condition property="projectLibNotExist">
            <not>
                <available file="${project.lib}" />
            </not>
        </condition>
        <condition property="projectLibExists">
                <available file="${project.lib}" />
        </condition>
    </target>

    <!-- create a clone of the JBoss EAP 'domain' config and name it the value of ${jboss.domain.base.dir} -->
    <target name="clone.jboss" >
        <delete dir="${jboss.home}/${jboss.domain.base.dir}" />
        <copy overwrite="true" todir="${jboss.home}/${jboss.domain.base.dir}">
            <fileset dir="${jboss.home}/domain" />
        </copy>
        <antcall target="filter">
            <param name="source.dir" value="conf/jboss"/>
            <param name="file.name" value="domain.xml"/>
            <param name="dest.dir" value="${jboss.home}/${jboss.domain.base.dir}/configuration"/>
        </antcall>
    </target>

    <!--
        purpose:  execute a cli batch script on a running EAP 6 server
        pass following parameters to this target :
            1)  cli.source.dir
            2)  cli.to.filter.and.execute
            3)  management.port (optional: default = 9999)
            4)  cli.fail.on.error  (optional; default = true)
    -->
    <target name="execute.cli" depends="" >
        <fail unless="cli.source.dir" message="execute.cli:  need to pass 'cli.source.dir' property" />
        <fail unless="cli.to.filter.and.execute" message="execute.cli:  need to pass 'cli.to.filter.and.execute' property" />
        <antcall target="filter">
            <param name="source.dir" value="${cli.source.dir}"/>
            <param name="file.name" value="${cli.to.filter.and.execute}"/>
            <param name="dest.dir" value="${temp.dir}"/>
        </antcall>
        <if>
            <not><isset property="management.port"/></not>
            <then><property name="management.port" value="9999" /></then>
        </if>
        <if>
            <not><isset property="cli.fail.on.error"/></not>
            <then><property name="cli.fail.on.error" value="true" /></then>
        </if>
        <echo message="***** execute.cli :  about to execute following batch script = ${temp.dir}/${cli.to.filter.and.execute} : cli.fail.on.error = ${cli.fail.on.error}" />
        <exec executable="${jboss.home}/bin/jboss-cli.sh" failonerror="${cli.fail.on.error}">
            <arg value="--connect"/>
            <arg value="--controller=${ENV.HOSTNAME}:${management.port}"/>
            <arg value="-c"/>
            <arg value="--file=${temp.dir}/${cli.to.filter.and.execute}"/>
        </exec>
    </target>
    <target name="eap.cli.gui" depends="" description="">
        <if>
            <not><isset property="management.port"/></not>
            <then><property name="management.port" value="9999" /></then>
        </if>
        <exec spawn="true" executable="${jboss.home}/bin/jboss-cli.sh">
            <arg value="--connect"/>
            <arg value="--controller=${ENV.HOSTNAME}:${management.port}"/>
            <arg value="--gui"/>
        </exec>
    </target>
    <target name="print.eap.cli" depends="" description="">
        <echo message="cli command = ${jboss.home}/bin/jboss-cli.sh --connect --controller=${ENV.HOSTNAME}:${management.port}" />
    </target>

    <!--
      pass following parameters to this target :
        1) source.dir
        2) file.name (optional)
        3) dest.dir
    -->
    <target name="filter">
        <fail unless="source.dir" message="filter:  need to pass 'source.dir' property" />
        <fail unless="dest.dir" message="filter:  need to pass 'dest.dir' property" />
        <if>
            <isset property="file.name"/>
            <then>
                <copy file="${source.dir}/${file.name}" toDir="${dest.dir}" overwrite="true">
                    <filterchain>
                        <expandproperties/>
                    </filterchain>
                </copy>
            </then>
            <else>
                <copy toDir="${dest.dir}" overwrite="true">
                    <fileset dir="${source.dir}" />
                    <filterchain>
                        <expandproperties/>
                    </filterchain>
                </copy>
            </else>
        </if>
    </target>



 



  <target name="download.brms.deployable">
    <echo message="Getting BRMS ..." />
    <mkdir dir="${install.home}/lib"/>
    <get src="${brms.download.url}" dest="${install.home}/lib/${brms.deployable.suffix}"  skipexisting="true" />
  </target>

    <condition property="useHornetQ" >
        <equals arg1="${org.jboss.processFlow.messagingProvider}" arg2="HORNETQ" />
    </condition>
    <target name="hornetq-config" if="useHornetQ" >
        <antcall target="execute.cli">
            <param name="cli.source.dir" value="conf/hornetq/"/>
            <param name="cli.to.filter.and.execute" value="hornetq-config-down.cli"/>
            <param name="cli.fail.on.error" value="false"/>
        </antcall>
        <antcall target="execute.cli">
            <param name="cli.source.dir" value="conf/hornetq/"/>
            <param name="cli.to.filter.and.execute" value="hornetq-config-up.cli"/>
            <param name="cli.fail.on.error" value="true"/>
        </antcall>
    </target>


    <target name="process.brms.libs" >
        <if>
            <isset property="useCompiledJBPMLibs"/>
            <then>
                <antcall target="download.community.brms.webs" />
            </then>
            <else>
                <antcall target="useBRMSLibs" />
            </else>
        </if>
        <copy toDir="${temp.pfp.lib.dir}" overwrite="true" >
            <fileset dir="lib" >
                <include name="*.jar" />
            </fileset>
        </copy>
    </target>

    <target name="useBRMSLibs" depends="" if="useBRMS">
        <echo message="inside useBRMSLibs" />
        <antcall target="download.brms.deployable" />
        <unzip src="${install.home}/lib/${brms.deployable.suffix}" dest="${temp.dir}" />
        <delete file="${temp.dir}/modeshape.zip" />
        <unzip src="${temp.dir}/jboss-brms-engine.zip" dest="${temp.dir}" />
        <delete file="${temp.dir}/jboss-brms-engine.zip" />
        <unzip src="${temp.dir}/jboss-brms-manager.zip" dest="${temp.dir}" />
        <delete file="${temp.dir}/jboss-brms-manager.zip" />

        <!-- contains: "business-central.war",  "designer.war", "gwt-console-server.war" &  "jbpm-human-task.war" -->
        <unzip src="${temp.dir}/jboss-jbpm-console.zip" dest="${temp.dir}" />
        <delete file="${temp.dir}/jboss-jbpm-console.zip" />

        <copy toDir="${temp.pfp.lib.dir}" overwrite="true" >
            <fileset dir="${temp.dir}/designer.war/WEB-INF/lib" >
                <include name="jackson*.jar" />
            </fileset>
            <fileset dir="${temp.dir}/binaries" >
                <include name="antlr-3.3.jar" />
                <include name="antlr-runtime-3.3.jar" />
                <include name="commons-io*.jar" />
                <include name="drools-*.jar" />
                <include name="freemarker*.jar" />
                <include name="jbpm-*.jar" />
                <include name="knowledge-*.jar" />
                <include name="mvel*.jar" />
                <include name="protobuf-*.jar" />
                <include name="stringtemplate*.jar" />
                <include name="trove*.jar" />
                <exclude name="*test*.jar" />
            </fileset>
            <fileset dir="${temp.dir}/gwt-console-server.war/WEB-INF/lib" >
                <include name="apache-mime4j-*.jar" />
                <include name="gwt-console-*.jar" />
                <include name="jaxrs-api-*.jar" />
                <include name="jbpm-gwt-shared-*.jar" />
                <include name="jbpm-bpmn2-emfextmodel*.jar" />
                <include name="jbpm-gwt-*.jar" />
                <include name="jcip-annotations-*.jar" />
                <include name="jsr250-*.jar" />
                <include name="mina-*.jar" />
                <include name="resteasy-*.jar" />
                <include name="scannotation-*.jar" />

                <!-- cant use because of services/properties in these libraries that over-ride our processFlowProvision extensions -->
                <exclude name="jbpm-gwt-core-*.jar" />
            </fileset>
        </copy>
    </target>

    <!-- re-create guvnor filesystem and copy over repository.xml -->
    <target name="refreshGuvnor" >
        <delete dir="${guvnor_repo_location}" />
        <mkdir dir="${guvnor_repo_location}" />
        <if>
            <not>
                <equals arg1="${hibernate.dialect}" arg2="org.hibernate.dialect.HSQLDialect" />
            </not>
            <then>
                <antcall target="filter">
                    <param name="source.dir" value="conf/brmsWebs/drools-guvnor"/>
                    <param name="file.name" value="repository.xml"/>
                    <param name="dest.dir" value="${guvnor_repo_location}"/>
                </antcall>
            </then>
        </if>

    </target>

    <target name="explode.guvnor.and.designer" >
        <if>
            <isset property="useBRMS"/>
            <then>
                <copy todir="${console.target}" >
                    <fileset dir="${temp.dir}/${console.name}.war" />
                </copy>
                <copy todir="${guvnor.target}" >
                    <fileset dir="${temp.dir}/jboss-brms.war" />
                </copy>
                <copy todir="${designer.target}" >
                    <fileset dir="${temp.dir}/designer.war" />
                </copy>
            </then>
            <else>
                <antcall target="download.community.brms.webs" />
                <unzip src="${install.home}/lib/guvnor-distribution-wars-${drools.guvnor.version}-jboss-as-7.0.war" dest="${guvnor.target}" />
                <unzip src="${install.home}/lib/jbpm-designer-${designer.version}.war" dest="${designer.target}" />
            </else>
        </if>
        <!-- disable until database integration with guvnor 5.5. is fixed  -->
        <!-- antcall target="filter">
            <param name="source.dir" value="conf/brmsWebs/drools-guvnor/WEB-INF"/>
            <param name="file.name" value="beans.xml"/>
            <param name="dest.dir" value="${guvnor.target}/WEB-INF"/>
        </antcall -->
        <antcall target="filter">
            <param name="source.dir" value="conf/brmsWebs/drools-guvnor/WEB-INF/classes"/>
            <param name="file.name" value="preferences.properties"/>
            <param name="dest.dir" value="${guvnor.target}/WEB-INF/classes"/>
        </antcall>
        <antcall target="filter">
            <param name="source.dir" value="conf/brmsWebs/drools-guvnor/WEB-INF"/>
            <param name="file.name" value="jboss-web.xml"/>
            <param name="dest.dir" value="${guvnor.target}/WEB-INF"/>
        </antcall>

        <antcall target="refreshGuvnor" />

        <antcall target="filter">
            <param name="source.dir" value="conf/brmsWebs/designer/profiles"/>
            <param name="file.name" value="jbpm.xml"/>
            <param name="dest.dir" value="${designer.target}/profiles"/>
        </antcall>
        <copy file="conf/brmsWebs/designer/WEB-INF/jboss-web.xml" toDir="${designer.target}/WEB-INF" />
    </target>

    <target name="explode.jbpm.gwt.console" >
        <if>
            <isset property="useCompiledJBPMLibs"/>
            <then>
                <unzip src="${install.home}/lib/jbpm-${jBPM.version}-gwt-console.zip" dest="${temp.dir}" />
                <unzip src="${temp.dir}/jbpm-gwt-console-${jBPM.version}.war" dest="${console.target}"/>
                <unzip src="${temp.dir}/jbpm-gwt-console-server-${jBPM.version}.war" dest="${console.server.target}"/>
            </then>
        </if>
        <if>
            <isset property="useBRMS"/>
            <then>
                <copy todir="${console.target}" >
                    <fileset dir="${temp.dir}/${console.name}.war" />
                </copy>
                <copy todir="${console.server.target}">
                    <fileset dir="${temp.dir}/gwt-console-server.war" />
                </copy>
            </then>
        </if>

        <delete file="${console.server.target}/WEB-INF/classes/ChangeSet.xml" />
        <delete file="${console.server.target}/WEB-INF/classes/META-INF/persistence.xml" />

        <antcall target="filter">
            <param name="source.dir" value="conf/brmsWebs/bpm-console-server/WEB-INF"/>
            <param name="dest.dir" value="${console.server.target}/WEB-INF"/>
        </antcall>
        <!-- TO-DO:  add this as a as7 module.  gwt-console-* dependencies can be found here :
            ${jbpm.source}/jbpm/jbpm-gwt/jbpm-gwt-console-server/target/war/work/org.jboss.bpm/gwt-console-server-jbpm/WEB-INF/
        -->
        <copy file="${temp.pfp.lib.dir}/processFlow-adminConsole.jar" toDir="${console.server.target}/WEB-INF/lib" overwrite="true" />
        <delete file="${console.server.target}/WEB-INF/classes/jbpm.console.properties" />
    </target>

    <target name="install.reporting.into.jboss7" >
        <delete dir="${org.jbpm.report.dir}" />
        <mkdir dir="${org.jbpm.report.dir}/ReportEngine" />
        <antcall target="filter">
            <param name="source.dir" value="conf/brmsWebs/birt"/>
            <param name="file.name" value="overall_activity.rptdesign"/>
            <param name="dest.dir" value="${org.jbpm.report.dir}"/>
        </antcall>
        <unzip src="${install.home}/lib/birt-runtime-${birt.version}.zip" dest="${install.home}"/>
        <delete >
            <fileset dir="${console.server.target}/WEB-INF/lib" >
                <include name="report*.*" />
            </fileset>
        </delete>
        <copy todir="${console.server.target}/WEB-INF/lib">
            <fileset dir="${birt.target}/ReportEngine/lib">
                <include name="**/*.jar"/>
                <exclude name="org.apache.commons.codec*.jar"/>
            </fileset>
            <fileset dir="${install.home}/lib/reporting">
                <include name="*.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="bounce.jbpm.gwt.console" description="">
        <antcall target="explode.jbpm.gwt.console" />
        <antcall target="install.reporting.into.jboss7" />
        <jar jarfile="${temp.dir}/${console.server.name}" basedir="${console.server.target}" />
        <exec executable="${jboss.home}/bin/jboss-cli.sh" failonerror="${cli.fail.on.error}">
            <arg value="--connect"/>
            <arg value="--controller=${ENV.HOSTNAME}:${management.port}"/>
            <arg value="deploy ${temp.dir}/${console.server.name} --name=${console.server.name} --server-groups=brms-webs-group"/>
        </exec>
        <jar jarfile="${temp.dir}/${console.name}" basedir="${console.target}" />
        <exec executable="${jboss.home}/bin/jboss-cli.sh" failonerror="${cli.fail.on.error}">
            <arg value="--connect"/>
            <arg value="--controller=${ENV.HOSTNAME}:${management.port}"/>
            <arg value="deploy ${temp.dir}/${console.name} --name=${console.name} --server-groups=brms-webs-group"/>
        </exec>
    </target>

    <target name="bounce.guvnor.designer" description="" >
        <antcall target="explode.guvnor.and.designer" />
        <jar jarfile="${temp.dir}/${guvnor.name}" basedir="${guvnor.target}" />
        <exec executable="${jboss.home}/bin/jboss-cli.sh" failonerror="${cli.fail.on.error}">
            <arg value="--connect"/>
            <arg value="--controller=${ENV.HOSTNAME}:${management.port}"/>
            <arg value="deploy ${temp.dir}/${guvnor.name} --name=${guvnor.name} --server-groups=brms-webs-group"/>
        </exec>
        <jar jarfile="${temp.dir}/${designer.name}" basedir="${designer.target}" />
        <exec executable="${jboss.home}/bin/jboss-cli.sh" failonerror="${cli.fail.on.error}">
            <arg value="--connect"/>
            <arg value="--controller=${ENV.HOSTNAME}:${management.port}"/>
            <arg value="deploy ${temp.dir}/${designer.name} --name=${designer.name} --server-groups=brms-webs-group"/>
        </exec>
    </target>


    <target name="clean.jbpm.install" depends="">
        <!-- JA Bride :  now deleting anything that is not previously downloaded -->
        <delete >
            <fileset dir="${install.home}/lib" >
                <include name="jbpm*.*" />
                <exclude name="jbpm*.zip" />
            </fileset>
        </delete>
    </target>

  <!-- Install Eclipse plugins -->
  <target name="install.drools-eclipse.into.eclipse" description="">
    <get src="${drools.eclipse.url}" dest="${install.home}/lib/org.drools.updatesite-${drools.eclipse.version}-assembly.zip"  skipexisting="true" />
    <mkdir dir="${eclipse.home}/drools-update-site"/>
    <unzip src="${install.home}/lib/org.drools.updatesite-${drools.eclipse.version}-assembly.zip" dest="${eclipse.home}/drools-update-site" />
    <copy todir="${eclipse.home}/features" overwrite="true">
      <fileset dir="${eclipse.home}/drools-update-site/features"/>
    </copy>
    <copy todir="${eclipse.home}/plugins" overwrite="true">
      <fileset dir="${eclipse.home}/drools-update-site/plugins"/>
    </copy>
    <delete dir="${eclipse.home}/drools-update-site"/>
  </target>

    <target name="distro.clean" >
        <delete dir="${temp.dir}" />
        <delete dir="${guvnor.target}" />
        <delete dir="${designer.target}" />
        <delete dir="${console.server.target}" />
        <delete dir="${console.target}" />
        <delete dir="${birt.target}" />
    </target>

    <target name="configure.jboss.modules" >
        <!--antcall target="resolve.droolsjbpm.dependencies" / -->
        <antcall target="filter">
            <param name="source.dir" value="conf/jboss/modules"/>
            <param name="dest.dir" value="${jboss.home}/modules"/>
        </antcall>

        <copy file="lib/commons/commons-codec-1.5.jar" todir="${jboss.home}/modules/org/apache/commons/codec/5" /> <!-- GuvnorConnectionUtils needs this version -->
        <copy file="${postgresql.jdbc.lib.path}" todir="${jboss.home}/modules/org/postgresql/jdbc/main" />
        <copy file="${mysql.jdbc.lib.path}" todir="${jboss.home}/modules/com/mysql/jdbc/main" />
        <copy file="${deps.lib.path}/stringtemplate-${version.stringtemplate}.jar" todir="${jboss.home}/modules/org/antlr/stringtemplate/main" />
        <copy file="${deps.lib.path}/protobuf-java-${version.protobuf}.jar" todir="${jboss.home}/modules/com/google/protobuf/main" />
        <copy file="${deps.lib.path}/antlr-runtime-${version.antlr}.jar" todir="${jboss.home}/modules/org/antlr/antlr-runtime/main" />
        <copy file="${deps.lib.path}/ecj-${version.ecj}.jar" todir="${jboss.home}/modules/org/eclipse/jdt/core/compiler/ecj/main" />
        <copy tofile="${jboss.home}/modules/org/drools/main/drools-compiler-${version.drools}.jar" >
            <fileset dir="${deps.lib.path}" ><include name="drools-compiler-*.jar" /></fileset>
        </copy>
        <copy tofile="${jboss.home}/modules/org/drools/main/drools-core-${version.drools}.jar" >
            <fileset dir="${deps.lib.path}" ><include name="drools-core-*.jar" /></fileset>
        </copy>
        <copy tofile="${jboss.home}/modules/org/drools/main/drools-persistence-jpa-${version.drools}.jar" >
            <fileset dir="${deps.lib.path}" ><include name="drools-persistence-jpa-*.jar" /></fileset>
        </copy>
        <copy tofile="${jboss.home}/modules/org/drools/main/knowledge-api-${version.drools}.jar" >
            <fileset dir="${deps.lib.path}" ><include name="knowledge-api-*.jar" /></fileset>
        </copy>
        <copy tofile="${jboss.home}/modules/org/drools/main/knowledge-internal-api-${version.drools}.jar" >
            <fileset dir="${deps.lib.path}" ><include name="knowledge-internal-api-*.jar" /></fileset>
        </copy>
        <copy tofile="${jboss.home}/modules/org/mvel/mvel2/main/mvel2-${version.mvel}.jar" >
            <fileset dir="${deps.lib.path}" ><include name="mvel2-*.jar" /></fileset>
        </copy>
        <copy todir="${jboss.home}/modules/org/jbpm/main" >
            <fileset dir="${jbpm.lib.path}" >
                <include name="jbpm-*.jar" />
                <exclude name="jbpm-human-task-hornetq-*.jar" />
                <exclude name="jbpm-human-task-jms-*.jar" />
                <exclude name="jbpm-human-task-mina-*.jar" />
                <exclude name="jbpm-test-*.jar" />
            </fileset>
        </copy>
        <if>
            <isset property="useCompiledJBPMLibs"/>
            <then><antcall target="copy.community.jbpm.deps.to.modules" /></then>
        </if>
        <copy todir="${jboss.home}/modules/org/jboss/processFlow/main" >
            <fileset dir="${temp.pfp.lib.dir}" />
        </copy>
    </target> 

    <target name="resolve.droolsjbpm.dependencies" >
        <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" >
            <classpath>
                <pathelement location="lib/ant/maven-ant-tasks-2.1.3.jar"/>
            </classpath>
        </typedef>
        <artifact:pom id="droolsjbpm-build-bootstrap" file="${droolsjbpm.source.dir}/droolsjbpm-build-bootstrap/pom.xml" />
        <artifact:dependencies filesetId="droolsjbpm.deps.path" pomRefId="droolsjbpm-build-bootstrap" useScope="test" />
        <pathconvert pathsep="${line.separator}|   |- "
             property="echo.droolsjbpm.deps.path"
             refid="droolsjbpm.deps.path">
        </pathconvert>
        <echo message="droolsjbpm-build-bootstrap-version = ${echo.droolsjbpm.deps.path} " />
    </target> 

    <!--
      pass following parameters to this target :
        1) refresh.master (optional)
    -->
    <target name="provision.pfp.core" description="if domain is not already running and/or needs to be refreshed :  -Drefresh.master=true ">
        <condition property="useBRMS">
            <not><isset property="upstream.jbpm5.drools.libs.type" /></not>
        </condition>
        <if>
            <equals arg1="${refresh.master}" arg2="true" />
            <then>
                <antcall target="refresh.master" />
            </then>
        </if>
        <antcall target="process.brms.libs" />
        <antcall target="hornetq-config" />
        <antcall target="execute.cli">
            <param name="cli.source.dir" value="conf/pfp"/>
            <param name="cli.to.filter.and.execute" value="pfp-config-up.cli"/>
            <param name="cli.fail.on.error" value="true"/>
        </antcall>
        <antcall target="privateServiceTaskRepoDeploy" />
        <antcall target="refreshGuvnor" />
    </target>

    <!--
      pass following parameters to this target :
        1) refresh.master (optional)
    -->
    <target name="provision.brms.webs" description="if domain is not already running and/or needs to be refreshed :  -Drefresh.master=true ">
        <if>
            <equals arg1="${refresh.master}" arg2="true" />
            <then><antcall target="refresh.master" /></then>
        </if>
        <mkdir dir="${install.home}/lib" />
        <condition property="useBRMS">
            <not><isset property="upstream.jbpm5.drools.libs.type" /></not>
        </condition>
        <antcall target="execute.cli">
            <param name="cli.source.dir" value="conf/brmsWebs"/>
            <param name="cli.to.filter.and.execute" value="brmsWebs-config-up.cli"/>
            <param name="cli.fail.on.error" value="true"/>
        </antcall>
        <antcall target="bounce.guvnor.designer" />
        <antcall target="bounce.jbpm.gwt.console" />
    </target>


</project>
